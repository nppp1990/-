选择题10*2 （没记住选项但是问题都是经典的）
1.i<=2n i=i*5  时间复杂度
2.一个无向图任意节点来一次深搜都可以找到所有节点这个图是（）A完全B连通…忘了
3.abcde出栈不合法的序列
5.top指向空闲，问入栈代码
6.栈插入删除的位置
7.中+后，求左子树节点个数
8.140个节点的图，用邻接矩阵存，邻接矩阵多大
9.7个数，折半查第4个数 要几次
10.哈希 平均查找长度和xx有关


简答题5 +5 +10 +10
1.Fa（int m）
Int res=m
If m>2
       Res=res*Fa(m/2)
Return res

问分析时间复杂度

2.写出快排一躺的结果
3.abcd全部出栈序列 没错是写全部合法的
4.前+中 求后序 比选择给的长点大概十几个字符吧

算法题15 +15+ 30
1.判断完全二叉树
2给一个数组，奇数前偶数后输出。
经典三问
3.有向带权图，权重是其他节点v‘到v的最短路径长度的最大值，权重最小的节点为图中心。设计算法求中心
经典三连问



算法设计题：三道。
一：设计一个算法，判断一个二叉树是否是完全二叉树（15分）（题干就这么些，没有对描述算法思想和时间复杂度的要求）
二：给定了一个正整数数组{33,18,15,12,17,20}，设计一个算法，将该数组中所有奇数调整到所有偶数之前。示例输出：{33,15,17,18,12,20}。（1）描述算法的基本设计思想（2）给出具体算法并适当注释（3）说明你所设计算法的时间复杂度（15分）
三：有向图，带权路径长度。然后给出了一个定义：将一个顶点到其它所有顶点的最大的带权路径长度称为该顶点的xx（具体名词不记得了）。将一个图中xx最小的顶点称为该图的核心。设计一个算法，求图的核心（1）描述算法的基本设计思想（2）给出具体算法并适当注释（3）说明你所设计算法的时间复杂度（20分
